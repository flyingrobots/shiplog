name: Shiplog CI Signing

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment (e.g., prod, staging)"
        required: false
        default: "prod"
      service:
        description: "Service name"
        required: false
        default: "release"
      status:
        description: "Status (success|failed|in_progress)"
        required: false
        default: "success"
      reason:
        description: "Reason/description"
        required: false
        default: "Automated CI entry"
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  sign-entry:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && inputs.env || 'prod' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq (if missing)
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Configure SSH signing (CI)
        env:
          CI_SSH_PRIVATE_KEY: ${{ secrets.CI_SSH_PRIVATE_KEY }}
          CI_SSH_PUBLIC_KEY: ${{ vars.CI_SSH_PUBLIC_KEY }}
        run: |
          set -euo pipefail
          [ -n "${CI_SSH_PRIVATE_KEY:-}" ] || { echo "Missing CI_SSH_PRIVATE_KEY secret" >&2; exit 1; }
          [ -n "${CI_SSH_PUBLIC_KEY:-}" ] || { echo "Missing CI_SSH_PUBLIC_KEY env" >&2; exit 1; }
          umask 077
          mkdir -p ~/.ssh
          printf '%s\n' "$CI_SSH_PRIVATE_KEY" > ~/.ssh/id_shiplog_ci_ed25519
          printf '%s\n' "$CI_SSH_PUBLIC_KEY" > ~/.ssh/id_shiplog_ci_ed25519.pub
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/id_shiplog_ci_ed25519
          git config --global user.name "Sea Eye"
          git config --global user.email "ci@flyingrobots.dev"

      - name: Prepare Shiplog environment
        run: |
          echo "::group::Fetch Shiplog refs"
          git fetch origin '+refs/_shiplog/*:refs/_shiplog/*' --prune || true
          echo "::endgroup::"
          echo "::group::Set SHIPLOG paths"
          echo "SHIPLOG_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "SHIPLOG_LIB_DIR=$GITHUB_WORKSPACE/lib" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          echo "::endgroup::"

      - name: Sync allowed signers from trust
        run: |
          set -euo pipefail
          ./scripts/shiplog-trust-sync.sh

      - name: Write Shiplog entry
        env:
          SHIPLOG_ENV: ${{ inputs.env || 'prod' }}
          SHIPLOG_SERVICE: ${{ inputs.service || 'release' }}
          SHIPLOG_STATUS: ${{ inputs.status || 'success' }}
          SHIPLOG_REASON: ${{ inputs.reason || format('Tag {0}', github.ref_name) }}
          SHIPLOG_BORING: 1
          SHIPLOG_ASSUME_YES: 1
        run: |
          set -euo pipefail
          git shiplog init
          git shiplog --boring --yes write

      - name: Push Shiplog journal
        env:
          SHIPLOG_ENV: ${{ inputs.env || 'prod' }}
        run: |
          set -euo pipefail
          git push origin "refs/_shiplog/journal/${SHIPLOG_ENV}"
